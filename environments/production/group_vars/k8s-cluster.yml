# Users to create for basic auth in Kubernetes API via HTTP
# kube_users:
#   kube:
#     pass: changeme
#     role: admin
#   root:
#     pass: changeme
#     role: admin

# Kubernetes cluster name, also will be used as DNS domain
# cluster_name: cluster.local
   #
# set this variable to calico if needed. keep it empty if flannel is used
# overlay_network_plugin: calico

# Kubernetes internal network for services, unused block of space.
# kube_service_addresses: 10.233.0.0/18

# internal network. When used, it will assign IP
# addresses from this range to individual pods.
# This network must be unused in your network infrastructure!
# overlay_network_subnet: 10.233.64.0/18

# internal network total size (optional). This is the prefix of the
# entire overlay network.  So the entirety of 4.0.0.0/16 must be
# unused in your environment.
# overlay_network_prefix: 18

# internal network node size allocation (optional). This is the size allocated
# to each node on your network.  With these defaults you should have
# room for 4096 nodes with 254 pods per node.
# overlay_network_host_prefix: 24

# Internal DNS configuration.
# Kubernetes can create and mainatain its own DNS server to resolve service names
# into appropriate IP addresses. It's highly advisable to run such DNS server,
# as it greatly simplifies configuration of your applications - you can use
# service names instead of magic environment variables.
# You still must manually configure all your containers to use this DNS server,
# Kubernetes won't do this for you (yet).

# Upstream dns servers used by dnsmasq
# upstream_dns_servers:
#   - 8.8.8.8
#   - 4.4.8.8
#
# # Use dns server : https://github.com/ansibl8s/k8s-skydns/blob/master/skydns-README.md
# dns_setup: true
# dns_domain: "{{ cluster_name }}"
#
# # Ip address of the kubernetes dns service
# dns_server: 10.233.0.10
